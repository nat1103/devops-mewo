services:
  jenkins:
    build:
      context: tools/jenkins
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock

  sonarqube:
    image: sonarqube:lts
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://postgres:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    ports:
      - "9000:9000"
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_temp:/opt/sonarqube/temp

  postgres:
    image: postgres:13-alpine
    environment:
      POSTGRES_DB: default
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "default", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}" ]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    ports:
      - "5432:5432"
    volumes:
      - postgresql_data:/var/lib/postgresql/data
      - ./tools/sonarqube/init-sonar-db.sql:/docker-entrypoint-initdb.d/init-sonar-db.sql
      - ./sources/realWorldApp-Conduit-Django/init-django-db.sql:/docker-entrypoint-initdb.d/init-django-db.sql

  back:
    build:
      context: ./sources/realWorldApp-Conduit-Django
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      sh -c "
      python manage.py makemigrations &&
      python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8000"
    ports:
      - 8001:8000
    volumes:
      - ./sources/realWorldApp-Conduit-Django:/app

  front:
    build:
      context: ./sources/realWorldApp-Conduit-vue3
      target: prod
    ports:
      - 8002:80

  docs:
    build:
      context: .
    volumes:
      - ./docs:/docs/docs:ro
    ports:
      - "8000:8000"

volumes:
  jenkins_data:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  sonarqube_temp:
  postgresql_data:
